/**
 * TaskOn
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* eslint-disable @typescript-eslint/no-explicit-any */
import { AxiosRequestConfig } from "axios";
import request from "@/core/utils/request";
import {
  GetTwitterAuthStateParams,
  InlineObject15,
  InlineObject17,
  InlineObject19,
  InlineObject4,
  InlineObject5,
  InlineResponse20012,
  InlineResponse20015,
  InlineResponse20035,
  InlineResponse20043,
  InlineResponse20045,
  TaskOnResponse,
} from "../models";

/**
 * SNSApi -
 * @export
 */
export const SNSApi = {
  /**
   *
   * @summary 检查tweet 链接是否存在
   * @param {InlineObject19} [inlineObject19]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1CheckTweetLinkPost(
    inlineObject19?: InlineObject19,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<TaskOnResponse>({
      url: "/v1/checkTweetLink",
      method: "POST",
      data: inlineObject19,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   * 获取1个Taskon Discord的邀请链接
   * @summary 获取Discord Taskon邀请链接
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1FetchTaskonDiscordInviteLinkPost(options?: AxiosRequestConfig) {
    const { result } = await request<InlineResponse20045>({
      url: "/v1/fetchTaskonDiscordInviteLink",
      method: "POST",

      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   *
   * @summary 查询Discord Channel信息
   * @param {InlineObject4} [inlineObject4]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1GetDiscordChannelInfoPost(
    inlineObject4?: InlineObject4,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<InlineResponse20012>({
      url: "/v1/getDiscordChannelInfo",
      method: "POST",
      data: inlineObject4,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   *
   * @summary 查询Telegram Channel信息
   * @param {InlineObject17} [inlineObject17]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1GetTelegramChannelInfoPost(
    inlineObject17?: InlineObject17,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<InlineResponse20043>({
      url: "/v1/getTelegramChannelInfo",
      method: "POST",
      data: inlineObject17,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   * result failed 表示失败
   * @summary 根据state查询token
   * @param {InlineObject15} [inlineObject15]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1GetTokenByStatePost(
    inlineObject15?: InlineObject15,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<InlineResponse20035>({
      url: "/v1/getTokenByState",
      method: "POST",
      data: inlineObject15,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   * 用于前端授权后提交state和token
   * @summary 查询用户Twitter Auth State (移动端）
   * @param {GetTwitterAuthStateParams} [getTwitterAuthStateParams]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1GetTwitterAuthStatePost(
    getTwitterAuthStateParams?: GetTwitterAuthStateParams,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<InlineResponse20015>({
      url: "/v1/getTwitterAuthState",
      method: "POST",
      data: getTwitterAuthStateParams,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   *
   * @summary 查询H5 twitter auth state
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1RequestTwitterAuthStatePost(options?: AxiosRequestConfig) {
    const { result } = await request<InlineResponse20035>({
      url: "/v1/requestTwitterAuthState",
      method: "POST",

      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },

  /**
   *
   * @summary 查询Twitter Handler是否存在
   * @param {InlineObject5} [inlineObject5]
   * @param {*} [options] Override http request option.
   * @memberof SNSApi
   */
  async v1TwitterHandleExistsPost(
    inlineObject5?: InlineObject5,
    options?: AxiosRequestConfig
  ) {
    const { result } = await request<TaskOnResponse>({
      url: "/v1/twitterHandleExists",
      method: "POST",
      data: inlineObject5,
      ...options,
    });
    if (typeof result === "undefined") {
      throw new Error("unexpected: result should exist when no error");
    }
    return result;
  },
};
